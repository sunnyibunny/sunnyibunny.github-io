<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/10/24/%E9%A1%BA%E5%BA%8F%E8%A1%A8SqList/"/>
    <url>/2023/10/24/%E9%A1%BA%E5%BA%8F%E8%A1%A8SqList/</url>
    
    <content type="html"><![CDATA[<h1 id="˳���SqList"><a href="#˳���SqList" class="headerlink" title="˳���SqList"></a>˳���SqList</h1><h2 id="��������"><a href="#��������" class="headerlink" title="��������"></a>��������</h2><ul><li><p><strong>SqList��ģ��</strong>��</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs C++">&#123;<br>    <span class="hljs-type">const</span> <span class="hljs-type">int</span> initcap = <span class="hljs-number">5</span>;<span class="hljs-comment">//˳����ĳ�ʼ����</span><br>    <span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">T</span>&gt;<br>    <span class="hljs-keyword">class</span> <span class="hljs-title class_">SqList</span><br>    &#123;<br>    <span class="hljs-keyword">public</span>:<br>        T* data;<br>        <span class="hljs-type">int</span> capacity;<span class="hljs-comment">//˳���������</span><br>        <span class="hljs-type">int</span> length;<span class="hljs-comment">//���˳����ĳ���</span><br>    &#125;;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>�ı�˳���������</strong>��void recap(int newcap)    </p><p> �ж�newcap�ĺϷ���</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs C++">&#123;<br>    <span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">recap</span><span class="hljs-params">(<span class="hljs-type">int</span> newcap)</span></span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(newcap &lt; <span class="hljs-number">0</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        T* olddata = data;<br>        data = <span class="hljs-keyword">new</span> T[newcap];<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>;i &lt; length;i ++)<br>        &#123;<br>            data[i] = olddata[i];<br>        &#125;<br>        <span class="hljs-keyword">delete</span>[]olddata;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>˳����Ľ���</strong>��void createList(T a[],int n)</p><p>  <font color = Feldspar>���ж�˳����Ƿ�������length == capacity)</Font>,��������������ݡ�</p></li><li><p><strong>���캯��</strong></p></li><li><p><strong>�������캯��</strong>��</p><p>  <font color = Feldspar>ע������Ϊָ��data����ռ䣨data = new T[capacity]��</font></p></li><li><p><strong>��������</strong></p></li><li><p><strong>��Ԫ��e���ӵ�˳���ĩβ</strong>��void Add��T e)</p></li><li><p><strong>��˳����ĳ���</strong>��int GetLength()</p></li><li><p><strong>��˳��������Ϊi��Ԫ��ֵ</strong>��bool GetElem(i)</p><p>  <font color = Feldspar>���ж�i�Ƿ�Ϸ�</font></p></li><li><p><strong>��˳�������e��Ϊ��i��Ԫ��</strong>��bool Insert(int i,T e)</p><p>   <font color = feldspar>���ж�i�Ƿ�Ϸ�����ȷ���Ƿ�����</font> </p><p>  (recap�ڲ����н�����һ�Σ���ƽ̯ʱ��ΪO��1��)</p></li><li><p><strong>ɾ����i��Ԫ��</strong>��bool Delete��int i)</p><p>   <font color= fredspar> ���������������(length &lt; 1/4 capacity)������</font></p></li><li><p><strong>���˳���������Ԫ��</strong>:void DispList()</p></li></ul><h2 id="Ӧ��"><a href="#Ӧ��" class="headerlink" title="Ӧ��"></a>Ӧ��</h2><ul><li><p><strong>ɾ������ֵΪx��ֵ</strong></p><p>���·���ʱ�临�ӶȾ�ΪO(n),�ռ临�Ӷ�O(1)</p><p>  1.���彨����������L,����x��ֵд��L1(ʵ����L1������L���ÿռ䣬ֻ������k��¼��������)��</p><p>  2.Ԫ���ƶ���</p><p>  3.<font color = fledspar>���仮�ַ�</font>��ǰ��Ϊ��x�����䣬���Ϊx�����䣬�ֱ�����ָ���ǰ���󡢴Ӻ���ǰ��������������㣬�򽻻���</p><blockquote><p>Leetcode26:ɾ�����������е��ظ���</p></blockquote><p>  <font color = fledspar>����ָ�뷨</font></p>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">removeDuplicates</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums)</span> </span>&#123;<br>        <span class="hljs-type">int</span> slow =  <span class="hljs-number">1</span>;<br>        <span class="hljs-type">int</span> fast = <span class="hljs-number">1</span>;<br>        <span class="hljs-type">int</span> n = nums.<span class="hljs-built_in">size</span>();<br>        <span class="hljs-keyword">while</span>(fast != n)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(nums[fast] != nums[fast - <span class="hljs-number">1</span>])<br>            &#123;<br>                nums[slow] = nums[fast];<br>                slow ++;<br>            &#125;<br>            fast ++;<br>        &#125;<br>        <span class="hljs-keyword">return</span> slow;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure></li><li><p><strong>����˳���—��·�鲢</strong></p><p><font color = fledspar>����ĳһ·��δ�鲢���Ԫ��</font><br>```C++<br>{<br>  int a[100] = {1,3,5,7};<br>  int b[100] = {1,2,4,5,7};<br>  SqList<int>A(a,4),B(b,5),C(100);<br>  int i =0,j = 0,k = 0;<br>  while(i &lt; A.length &amp;&amp; j &lt; B.length)<br>  {</p><pre><code class="hljs">  if(A.data[i] &lt; B.data[j])  &#123;      C.data[k ++] = A.data[i ++];  &#125;else if(A.data[i] &gt; B.data[j])  &#123;      C.data[k ++] = B.data[j ++];  &#125;  else  &#123;      C.data[k ++] = A.data[i ++];      j ++;//�������жϣ�������ظ�����  &#125;</code></pre><p>  }<br>  while(i &lt; A.length)//���A����Ԫ��û�й鲢�꣬��ʣ�µ�Ԫ��д��C��<br>  {</p><pre><code class="hljs">  C.data[k ++] = A.data[i ++];</code></pre><p>  }<br>  while(j &lt; B.length)//B<br>  {</p><pre><code class="hljs">  C.data[k ++] = B.data[j ++];</code></pre><p>  }<br>  for(i = 0;i &lt; k;i ++)</p><pre><code class="hljs">  cout&lt;&lt;C.data[i]&lt;&lt;&quot; &quot;;</code></pre><p>}</p></li><li><p><strong>����������A��B����λ����Ԫ�ظ�����Ϊn)</strong></p><p>��·�鲢����n�Σ��鲢Ԫ�ؾ�����λ�����Ƚ���Ԫ�ؽ�Сֵ��</p></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>字符串整合</title>
    <link href="/2023/07/15/%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B4%E5%90%88/"/>
    <url>/2023/07/15/%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B4%E5%90%88/</url>
    
    <content type="html"><![CDATA[<h2 id="char类型字符数组"><a href="#char类型字符数组" class="headerlink" title="char类型字符数组"></a>char类型字符数组</h2><pre><code class="hljs"> 需包含头文件&lt;cstring.h&gt;</code></pre><ul><li>常用ASCII码</li></ul><pre><code class="hljs">| 数字 | 对应字符 ||:------:|:--------:||32|空格||48|0||65|A||97|a|</code></pre><ul><li>常用函数</li></ul><ol><li><p>strlen()</p><p>原型:<code>size_t strlen(char const* string);</code></p><p>返回有效长度（不包括<code>\0</code>），<code>sizeof()</code>包括<code>\0</code>。</p></li><li><p>strcmp()</p><p>原型：<code>int strcmp(char const *s1, char const *s2, size_t len);</code></p><p> 比较两个字符串：如果s1小于s2，strcmp函数返回一个负值。如果s1大于s2，函数返回一个大于正值。如果两个字符串相等，函数就返回零。</p></li><li><p>strcat()</p><p>原型：<code>char *strcat(char *dst, char const *src,int len);</code></p><p>第一个参数必须是数组名，第二个参数可以是字符串常量。</p></li><li><p>strcpy()</p><p>原型：<code>char *strcpy(char *dst, char const *src);</code></p></li></ol><ul><li>输入函数</li></ul><ol><li><p><code>cin&gt;&gt;</code></p><p>将回车、空格都识别为字符串的结束，只能读入不含空格的字符串。</p></li><li><p><code>cin.get()</code><font color = 'wheat'>（包括空格和回车）</font></p><p>从输入行中取出<font color = 'tan'>一个字符</font>，并将其赋给字符型变量。</p><p><code>cin.get(char ch)</code>或<code>ch = cin.get()</code></p><p> <strong><code>cin.get()</code>可吃掉滞留缓存的<code>\n</code></strong></p></li><li><p><code>getchar()</code><font color = 'wheat'>（包括回车和空格）</font></p><p>读入的是ASCII码，得到的字符可以赋给<font color = 'tan'>一个字符</font>或整型变量，也可以不赋给任何变量，作为表达式一部分。</p></li><li><p><code>cin.getline()</code><font color = 'wheat'>（包括空格）</font></p><p><code>cin.geiline(char *array，int cnt，char ch)</code></p><p> 其中，第一个参数为读入的数组，第二个参数为读入个数，第三个参数为结束字符（该字符不输出）。</p><p>读入<font color = 'tan'>一行字符</font>，将<code>\n</code>丢弃，并替换为<code>\0</code>存入数组。</p></li></ol><h2 id="string类型字符串"><a href="#string类型字符串" class="headerlink" title="string类型字符串"></a>string类型字符串</h2><pre><code class="hljs"> 需包含头文件&lt;string.h&gt;</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/01/16/hello-world/"/>
    <url>/2023/01/16/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
